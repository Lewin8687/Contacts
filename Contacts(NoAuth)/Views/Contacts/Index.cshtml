@using PagedList;
@using PagedList.Mvc;

@model IPagedList<Contacts_NoAuth_.Models.Contacts>

@{
    ViewBag.Title = "Index";
}
<hr />
<h2>Index</h2>

<p>
    @Html.ActionLink("Create", "Create", null, htmlAttributes: new { @class = "btn btn-success" })
</p>
<div>
    <div>
        <div>
        @using (Html.BeginForm("Index", "Contacts", FormMethod.Get))
        { @Html.TextBox("Search") <input type="submit" value="Search" />}
        </div>
        <div style="text-align:right">
        @using (Html.BeginForm("Index", "Contacts", FormMethod.Get))
        {@Html.DropDownList("PageSizeOptions", null, new { onchange = "this.form.submit()" })}
        </div>
    </div>
</div>

<div class="table-responsive">

    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.ActionLink("Name", "Index", new { sortBy = ViewBag.SortNameParam, search = Request["Search"] })
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Phone)
                </th>
                <th class="col_1">
                    @Html.DisplayNameFor(model => model.First().Postal)
                </th>
                <th class="col_1">
                    @Html.DisplayNameFor(model => model.First().Address)
                </th>
                <th class="col_1">
                    @Html.ActionLink("Deleted", "Index", new { sortBy = ViewBag.SortDeletedParam, search = Request["Search"] })
                </th>
                <th class="col_2"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
        {
            var shortDescript = String.IsNullOrEmpty(item.Address) || item.Address.Length <= 10 ? item.Address : String.Concat(item.Address.Take(10)) + "...";

                <tr class="@("class= " + (item.IsDeleted ? "bg-danger" : ""))">
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Phone)
                    </td>
                    <td class="col_1">
                        @Html.DisplayFor(modelItem => item.Postal)
                    </td>
                    <td class="col_1">
                        @Html.DisplayFor(modelItem => shortDescript)
                    </td>
                    <td class="col_1">
                        @Html.DisplayFor(modelItem => item.IsDeleted)
                    </td>
                    <td class="col_1">
                        @Html.ActionLink("Edit", "Edit", new { id = item.ID }, htmlAttributes: new { @class = "btn btn-sm btn-warning" }) 
                        @Html.ActionLink("Details", "Details", new { id = item.ID }, htmlAttributes: new { @class = "btn btn-sm btn-info" })
                        @if (!item.IsDeleted)
                    { @Html.ActionLink("Delete", "Delete", new { id = item.ID }, htmlAttributes: new { @class = "btn btn-sm btn-danger" }) }
                    </td>
                </tr>
                <tr>
                    <td colspan="3" class="col_2">
                    @Html.ActionLink("Edit", "Edit", new { id = item.ID }, htmlAttributes: new { @class = "btn btn-sm btn-warning" })
                    @Html.ActionLink("Details", "Details", new { id = item.ID }, htmlAttributes: new { @class = "btn btn-sm btn-info" })
                    @if (!item.IsDeleted)
                    { @Html.ActionLink("Delete", "Delete", new { id = item.ID }, htmlAttributes: new { @class = "btn btn-sm btn-danger" }) }
                    </td>
                </tr>
        }

            @if (Model.Count() == 0)
        {
                <tr>
                    <td colspan="7">
                        No result by search criteria!
                    </td>
                </tr>
        }
        </tbody>
    </table>

</div>
<div style="text-align:center">
@Html.PagedListPager(Model, page => Url.Action("Index", new
{
    page,
    search = Request.QueryString["search"],
    sortBy = Request["sortBy"]
}))
</div>
